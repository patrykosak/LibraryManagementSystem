package MyForms;

import MyClasses.Book;
import MyClasses.Functions;
import MyClasses.IssueBook;
import MyClasses.Student;
import java.awt.Color;
import java.awt.HeadlessException;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableModel;

public class ReturnBookForm extends javax.swing.JFrame {
            Functions f = new Functions();
            Book book = new Book();
            Student student = new Student();
            IssueBook issueBook = new IssueBook();

    public ReturnBookForm() {
        initComponents();
        
        this.setLocationRelativeTo(null);
    
        Border panelHeaderBorder = BorderFactory.createMatteBorder(3, 3, 3, 3, new Color(108,122,137));
        jPanel1.setBorder(panelHeaderBorder);
        
        f.displayImage(90, 60,null, "C:\\Users\\xxx\\Documents\\NetBeansProjects\\LibraryManagmentSystem\\src\\main\\java\\images\\organizer.png", jLabelFormTitle);

        setBordetToJlable(jLabelBookName, Color.white);
        setBordetToJlable(jLabelStudentFullName, Color.white);

        f.customTable(jTableIssueBooks);
        f.customTableHeader(jTableIssueBooks, new Color(34, 167, 240), 14);
        populateJtableWithIssuedBooks("");
    }

 
      public void populateJtableWithIssuedBooks(String status)
    {
        ArrayList<IssueBook> issuedBooksList = issueBook.issuedBooksList(status);
        
        String[] colNames = {"ID","Book","Student","Status","Iss-Date","Rtn-Date","Note"};

        Object[][] rows = new Object[issuedBooksList.size()][colNames.length];
        
        for(int i = 0; i < issuedBooksList.size(); i++){
            rows[i][0] = issuedBooksList.get(i).getId();
            rows[i][1] = issuedBooksList.get(i).getBookId();
            rows[i][2] = issuedBooksList.get(i).getStudentId();
            rows[i][3] = issuedBooksList.get(i).getStatus();
            rows[i][4] = issuedBooksList.get(i).getIssueDate();
            rows[i][5] = issuedBooksList.get(i).getReturnDate();
            rows[i][6] = issuedBooksList.get(i).getNote();
        }
        
        DefaultTableModel model  = new DefaultTableModel(rows, colNames);
        jTableIssueBooks.setModel(model);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel9 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabelFormTitle = new javax.swing.JLabel();
        jLabelClose = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jButtonReturn = new javax.swing.JButton();
        jButtonLost = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jDateChooserIssueDate = new com.toedter.calendar.JDateChooser();
        jLabelBookName = new javax.swing.JLabel();
        jLabelStudentFullName = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jDateChooserReturnDate = new com.toedter.calendar.JDateChooser();
        jSpinnerBookId = new javax.swing.JSpinner();
        jSpinnerStudentId = new javax.swing.JSpinner();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaNote = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableIssueBooks = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jComboBoxStatus = new javax.swing.JComboBox<>();
        jButtonDelete = new javax.swing.JButton();

        jLabel9.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        jLabel9.setText("Return Date:");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(408, 217));

        jLabelFormTitle.setBackground(new java.awt.Color(108, 122, 137));
        jLabelFormTitle.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabelFormTitle.setForeground(new java.awt.Color(255, 255, 255));
        jLabelFormTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelFormTitle.setText("Return Book");
        jLabelFormTitle.setOpaque(true);

        jLabelClose.setBackground(new java.awt.Color(108, 122, 137));
        jLabelClose.setFont(new java.awt.Font("Verdana", 0, 16)); // NOI18N
        jLabelClose.setForeground(new java.awt.Color(255, 255, 255));
        jLabelClose.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelClose.setText("X");
        jLabelClose.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelClose.setOpaque(true);
        jLabelClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelCloseMouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        jLabel1.setText("Select Book Status:");

        jButtonReturn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonReturn.setText("Return");
        jButtonReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonReturnActionPerformed(evt);
            }
        });

        jButtonLost.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonLost.setText("Lost");
        jButtonLost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLostActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        jLabel7.setText("Issue Date:");

        jDateChooserIssueDate.setEnabled(false);
        jDateChooserIssueDate.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabelBookName.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabelBookName.setForeground(new java.awt.Color(51, 102, 255));
        jLabelBookName.setText("Book Name");
        jLabelBookName.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelBookName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelBookNameMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelBookNameMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelBookNameMouseExited(evt);
            }
        });

        jLabelStudentFullName.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabelStudentFullName.setForeground(new java.awt.Color(51, 102, 255));
        jLabelStudentFullName.setText("Student Full-Name");
        jLabelStudentFullName.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelStudentFullName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelStudentFullNameMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelStudentFullNameMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelStudentFullNameMouseExited(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        jLabel4.setText("Enter Student ID:");

        jLabel8.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        jLabel8.setText("Return Date:");

        jDateChooserReturnDate.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jSpinnerBookId.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jSpinnerBookId.setEnabled(false);

        jSpinnerStudentId.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jSpinnerStudentId.setEnabled(false);

        jLabel10.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        jLabel10.setText("Note:");

        jTextAreaNote.setColumns(20);
        jTextAreaNote.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jTextAreaNote.setRows(5);
        jScrollPane1.setViewportView(jTextAreaNote);

        jTableIssueBooks.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTableIssueBooks.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableIssueBooks.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableIssueBooksMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableIssueBooks);

        jLabel2.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        jLabel2.setText("Enter Book ID:");

        jComboBoxStatus.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jComboBoxStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "Issued", "Returned", "Lost" }));
        jComboBoxStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxStatusActionPerformed(evt);
            }
        });

        jButtonDelete.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonDelete.setText("Delete");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabelFormTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelClose, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabelBookName)
                                        .addComponent(jSpinnerBookId, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabelStudentFullName)
                                        .addComponent(jSpinnerStudentId, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel7)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jDateChooserIssueDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel8)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jDateChooserReturnDate, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButtonReturn, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonLost, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButtonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 458, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(239, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2)
                        .addGap(8, 8, 8))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabelClose, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelFormTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE))
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jSpinnerBookId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jComboBoxStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabelBookName)
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jSpinnerStudentId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(4, 4, 4)
                        .addComponent(jLabelStudentFullName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jDateChooserIssueDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jDateChooserReturnDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonLost, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonReturn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE))
                .addGap(23, 23, 23))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 598, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonLostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLostActionPerformed
        int index = jTableIssueBooks.getSelectedRow();
        int id = Integer.parseInt(jTableIssueBooks.getValueAt(index, 0).toString());
        int bookId = (int)jSpinnerBookId.getValue();
        String note = jTextAreaNote.getText();
        
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        
        try{
        String returnDate = dateFormat.format(jDateChooserReturnDate.getDate());
        
        String issueDate = dateFormat.format(jDateChooserIssueDate.getDate());

                
                issueBook.updateIssue(id, "lost", issueDate, returnDate,note); 
                int quantity = book.getBookById(bookId).getQuantity();
                book.setQuantity(bookId, quantity-1);
                populateJtableWithIssuedBooks("");
                 
                 jSpinnerBookId.setValue(0);
                 jSpinnerStudentId.setValue(0);
                 jLabelBookName.setText("Book Name");
                 jLabelStudentFullName.setText("Student Full-Name");
                 jDateChooserIssueDate.setDate(new Date());
                 jDateChooserReturnDate.setDate(new Date());
                 jTextAreaNote.setText("");
        
        }
        catch (HeadlessException | NullPointerException ex) {
                    JOptionPane.showMessageDialog(null, "Select An Item From The Table","Select Item",2);
                } 
        catch (SQLException ex) {
                    Logger.getLogger(ReturnBookForm.class.getName()).log(Level.SEVERE, null, ex);
                }
    }//GEN-LAST:event_jButtonLostActionPerformed

    private void jButtonReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonReturnActionPerformed
        int index = jTableIssueBooks.getSelectedRow();
        int id = Integer.parseInt(jTableIssueBooks.getValueAt(index, 0).toString());
        int bookId = Integer.parseInt(jTableIssueBooks.getValueAt(index, 1).toString());
        String status = jTableIssueBooks.getValueAt(index, 3).toString();
        
        String note = jTextAreaNote.getText();
        
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        
        try{
        String returnDate = dateFormat.format(jDateChooserReturnDate.getDate());
        Date retDate = dateFormat.parse(returnDate);
        
        String issueDate = dateFormat.format(jDateChooserIssueDate.getDate());
        Date issDate = dateFormat.parse(issueDate);
        
        if(retDate.before(issDate)){
            JOptionPane.showMessageDialog(null, "The Return Date Must Be After The Issue Date","Wrong Return Date",2);
        }
        else{
                if(status.equals("lost")){
                int quantity = book.getBookById(bookId).getQuantity();
                book.setQuantity(bookId, quantity+1);
                }
                 issueBook.updateIssue(id, "returned", issueDate, returnDate,note); 
                 populateJtableWithIssuedBooks("");
                 jSpinnerBookId.setValue(0);
                 jSpinnerStudentId.setValue(0);
                 jLabelBookName.setText("Book Name");
                 jLabelStudentFullName.setText("Student Full-Name");
                 jDateChooserIssueDate.setDate(new Date());
                 jDateChooserReturnDate.setDate(new Date());
        }
        }
        catch (HeadlessException| NullPointerException | ParseException ex) {
                    JOptionPane.showMessageDialog(null, "Select An Item From The Table","Select Item",2);
                } catch (SQLException ex) {
                    Logger.getLogger(ReturnBookForm.class.getName()).log(Level.SEVERE, null, ex);
                }
    }//GEN-LAST:event_jButtonReturnActionPerformed

    private void jLabelCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelCloseMouseClicked
        this.dispose();
    }//GEN-LAST:event_jLabelCloseMouseClicked

    private void jLabelBookNameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelBookNameMouseClicked
        int bookId = (int)jSpinnerBookId.getValue();
        BookInfoCardForm infoCard = new BookInfoCardForm(bookId);
        infoCard.setVisible(true);
    }//GEN-LAST:event_jLabelBookNameMouseClicked

    private void jLabelStudentFullNameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelStudentFullNameMouseClicked
        int studentId = (int)jSpinnerStudentId.getValue();
        StudentInfoCardForm infoCard = new StudentInfoCardForm(studentId);
        infoCard.setVisible(true);
    }//GEN-LAST:event_jLabelStudentFullNameMouseClicked

    private void jLabelBookNameMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelBookNameMouseEntered
        setBordetToJlable(jLabelBookName,new Color(51,102,255));
    }//GEN-LAST:event_jLabelBookNameMouseEntered

    private void jLabelBookNameMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelBookNameMouseExited
        setBordetToJlable(jLabelBookName,new Color(255,255,255));
    }//GEN-LAST:event_jLabelBookNameMouseExited

    private void jLabelStudentFullNameMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelStudentFullNameMouseEntered
       setBordetToJlable(jLabelStudentFullName,new Color(51,102,255));
    }//GEN-LAST:event_jLabelStudentFullNameMouseEntered

    private void jLabelStudentFullNameMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelStudentFullNameMouseExited
        setBordetToJlable(jLabelStudentFullName,new Color(255,255,255));
    }//GEN-LAST:event_jLabelStudentFullNameMouseExited

    private void jTableIssueBooksMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableIssueBooksMouseClicked

        int index = jTableIssueBooks.getSelectedRow();
        int bookId = Integer.parseInt(jTableIssueBooks.getValueAt(index, 1).toString());
        int studentId = Integer.parseInt(jTableIssueBooks.getValueAt(index, 2).toString());
        
        Book selectedBook;
        Student selectedStudent;
        try{
        selectedBook = book.getBookById(bookId);
        jSpinnerBookId.setValue(selectedBook.getId());
        jLabelBookName.setText(selectedBook.getName());
        
        selectedStudent = student.getStudentById(studentId);
        jSpinnerStudentId.setValue(selectedStudent.getId());
        jLabelStudentFullName.setText(selectedStudent.getName()+" "+selectedStudent.getSurname());
        

        String issuedDate = jTableIssueBooks.getValueAt(index, 4).toString();
        String returnDate = jTableIssueBooks.getValueAt(index, 5).toString();
        String note = jTableIssueBooks.getValueAt(index, 6).toString();

        Date issDate = new SimpleDateFormat("yyyy-MM-dd").parse(issuedDate);
        jDateChooserIssueDate.setDate(issDate);
        
        Date retDate = new SimpleDateFormat("yyyy-MM-dd").parse(returnDate);
        jDateChooserReturnDate.setDate(retDate);
        
        jTextAreaNote.setText(note);
        }
        catch(  SQLException | ParseException ex){
            Logger.getLogger(ReturnBookForm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jTableIssueBooksMouseClicked

    private void jComboBoxStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxStatusActionPerformed
        String status = jComboBoxStatus.getSelectedItem().toString();
        if(status.equals("All")){
            status="";
        }
        populateJtableWithIssuedBooks(status);
    }//GEN-LAST:event_jComboBoxStatusActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        int index = jTableIssueBooks.getSelectedRow();
        
        try{
        int id = Integer.parseInt(jTableIssueBooks.getValueAt(index, 0).toString());
        issueBook.removeIssueBook(id);
        populateJtableWithIssuedBooks("");
                 jSpinnerBookId.setValue(0);
                 jSpinnerStudentId.setValue(0);
                 jLabelBookName.setText("Book Name");
                 jLabelStudentFullName.setText("Student Full-Name");
                 jDateChooserIssueDate.setDate(new Date());
                 jDateChooserReturnDate.setDate(new Date());
                 jTextAreaNote.setText("");
        }
        catch(NumberFormatException ex){
            JOptionPane.showMessageDialog(null, "Select The Element You Want To Delete From The Table","Delete Error",2);
        }
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    public void setBordetToJlable(JLabel label, Color color){
        Border border = BorderFactory.createMatteBorder(0, 0, 1, 0, color);
        label.setBorder(border);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    //javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReturnBookForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReturnBookForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReturnBookForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReturnBookForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReturnBookForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonLost;
    private javax.swing.JButton jButtonReturn;
    private javax.swing.JComboBox<String> jComboBoxStatus;
    private com.toedter.calendar.JDateChooser jDateChooserIssueDate;
    private com.toedter.calendar.JDateChooser jDateChooserReturnDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelBookName;
    private javax.swing.JLabel jLabelClose;
    private javax.swing.JLabel jLabelFormTitle;
    private javax.swing.JLabel jLabelStudentFullName;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner jSpinnerBookId;
    private javax.swing.JSpinner jSpinnerStudentId;
    private javax.swing.JTable jTableIssueBooks;
    private javax.swing.JTextArea jTextAreaNote;
    // End of variables declaration//GEN-END:variables
}
